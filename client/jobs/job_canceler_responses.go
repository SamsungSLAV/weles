// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2017-2018 Samsung Electronics Co., Ltd All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License
//

package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	weles "github.com/SamsungSLAV/weles"
)

// JobCancelerReader is a Reader for the JobCanceler structure.
type JobCancelerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *JobCancelerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewJobCancelerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewJobCancelerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewJobCancelerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewJobCancelerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewJobCancelerNoContent creates a JobCancelerNoContent with default headers values
func NewJobCancelerNoContent() *JobCancelerNoContent {
	return &JobCancelerNoContent{}
}

/*JobCancelerNoContent handles this case with default header values.

No Content
*/
type JobCancelerNoContent struct {
}

func (o *JobCancelerNoContent) Error() string {
	return fmt.Sprintf("[POST /jobs/{JobID}/cancel][%d] jobCancelerNoContent ", 204)
}

func (o *JobCancelerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewJobCancelerForbidden creates a JobCancelerForbidden with default headers values
func NewJobCancelerForbidden() *JobCancelerForbidden {
	return &JobCancelerForbidden{}
}

/*JobCancelerForbidden handles this case with default header values.

Forbidden
*/
type JobCancelerForbidden struct {
	Payload *weles.ErrResponse
}

func (o *JobCancelerForbidden) Error() string {
	return fmt.Sprintf("[POST /jobs/{JobID}/cancel][%d] jobCancelerForbidden  %+v", 403, o.Payload)
}

func (o *JobCancelerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(weles.ErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewJobCancelerNotFound creates a JobCancelerNotFound with default headers values
func NewJobCancelerNotFound() *JobCancelerNotFound {
	return &JobCancelerNotFound{}
}

/*JobCancelerNotFound handles this case with default header values.

Not Found
*/
type JobCancelerNotFound struct {
	Payload *weles.ErrResponse
}

func (o *JobCancelerNotFound) Error() string {
	return fmt.Sprintf("[POST /jobs/{JobID}/cancel][%d] jobCancelerNotFound  %+v", 404, o.Payload)
}

func (o *JobCancelerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(weles.ErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewJobCancelerInternalServerError creates a JobCancelerInternalServerError with default headers values
func NewJobCancelerInternalServerError() *JobCancelerInternalServerError {
	return &JobCancelerInternalServerError{}
}

/*JobCancelerInternalServerError handles this case with default header values.

Internal Server error
*/
type JobCancelerInternalServerError struct {
	Payload *weles.ErrResponse
}

func (o *JobCancelerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /jobs/{JobID}/cancel][%d] jobCancelerInternalServerError  %+v", 500, o.Payload)
}

func (o *JobCancelerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(weles.ErrResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
