// Copyright (c) 2017-2018 Samsung Electronics Co., Ltd All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License
//

package enums

// This file was generated by the swagger tool.

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Direction Direction of pagination.
// swagger:model Direction
type Direction string

const (

	// DirectionForward captures enum value "forward"
	DirectionForward Direction = "forward"

	// DirectionBackward captures enum value "backward"
	DirectionBackward Direction = "backward"
)

// for schema
var directionEnum []interface{}

func init() {
	var res []Direction
	if err := json.Unmarshal([]byte(`["forward","backward",""]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		directionEnum = append(directionEnum, v)
	}
}

func (m Direction) validateDirectionEnum(path, location string, value Direction) error {
	if err := validate.Enum(path, location, value, directionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this direction
func (m Direction) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDirectionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
