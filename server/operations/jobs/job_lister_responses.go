// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2017-2018 Samsung Electronics Co., Ltd All Rights Reserved
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License
//

package jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	weles "github.com/SamsungSLAV/weles"
)

// JobListerOKCode is the HTTP code returned for type JobListerOK
const JobListerOKCode int = 200

/*JobListerOK OK

swagger:response jobListerOK
*/
type JobListerOK struct {
	/*Weles-List-Batch-Size is the count of records returned on
	current page.

	*/
	WelesListBatchSize int32 `json:"Weles-List-Batch-Size"`
	/*Weles-List-Total is the count of records currently
	fulfilling the requested JobFilter. Please note that this value
	may change when requesting for the same data at a different
	moments in time.

	*/
	WelesListTotal uint64 `json:"Weles-List-Total"`
	/*Weles-Next-Page is the URL suffix to request next page of data.
	Please note that the same body must be used as in initial
	request.

	*/
	WelesNextPage string `json:"Weles-Next-Page"`
	/*Weles-Previous-Page is the URL suffix to request previous page
	of data.  Please note that the same body must be used as in
	initial request.

	*/
	WelesPreviousPage string `json:"Weles-Previous-Page"`

	/*
	  In: Body
	*/
	Payload []*weles.JobInfo `json:"body,omitempty"`
}

// NewJobListerOK creates JobListerOK with default headers values
func NewJobListerOK() *JobListerOK {

	return &JobListerOK{}
}

// WithWelesListBatchSize adds the welesListBatchSize to the job lister o k response
func (o *JobListerOK) WithWelesListBatchSize(welesListBatchSize int32) *JobListerOK {
	o.WelesListBatchSize = welesListBatchSize
	return o
}

// SetWelesListBatchSize sets the welesListBatchSize to the job lister o k response
func (o *JobListerOK) SetWelesListBatchSize(welesListBatchSize int32) {
	o.WelesListBatchSize = welesListBatchSize
}

// WithWelesListTotal adds the welesListTotal to the job lister o k response
func (o *JobListerOK) WithWelesListTotal(welesListTotal uint64) *JobListerOK {
	o.WelesListTotal = welesListTotal
	return o
}

// SetWelesListTotal sets the welesListTotal to the job lister o k response
func (o *JobListerOK) SetWelesListTotal(welesListTotal uint64) {
	o.WelesListTotal = welesListTotal
}

// WithWelesNextPage adds the welesNextPage to the job lister o k response
func (o *JobListerOK) WithWelesNextPage(welesNextPage string) *JobListerOK {
	o.WelesNextPage = welesNextPage
	return o
}

// SetWelesNextPage sets the welesNextPage to the job lister o k response
func (o *JobListerOK) SetWelesNextPage(welesNextPage string) {
	o.WelesNextPage = welesNextPage
}

// WithWelesPreviousPage adds the welesPreviousPage to the job lister o k response
func (o *JobListerOK) WithWelesPreviousPage(welesPreviousPage string) *JobListerOK {
	o.WelesPreviousPage = welesPreviousPage
	return o
}

// SetWelesPreviousPage sets the welesPreviousPage to the job lister o k response
func (o *JobListerOK) SetWelesPreviousPage(welesPreviousPage string) {
	o.WelesPreviousPage = welesPreviousPage
}

// WithPayload adds the payload to the job lister o k response
func (o *JobListerOK) WithPayload(payload []*weles.JobInfo) *JobListerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the job lister o k response
func (o *JobListerOK) SetPayload(payload []*weles.JobInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JobListerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Weles-List-Batch-Size

	welesListBatchSize := swag.FormatInt32(o.WelesListBatchSize)
	if welesListBatchSize != "" {
		rw.Header().Set("Weles-List-Batch-Size", welesListBatchSize)
	}

	// response header Weles-List-Total

	welesListTotal := swag.FormatUint64(o.WelesListTotal)
	if welesListTotal != "" {
		rw.Header().Set("Weles-List-Total", welesListTotal)
	}

	// response header Weles-Next-Page

	welesNextPage := o.WelesNextPage
	if welesNextPage != "" {
		rw.Header().Set("Weles-Next-Page", welesNextPage)
	}

	// response header Weles-Previous-Page

	welesPreviousPage := o.WelesPreviousPage
	if welesPreviousPage != "" {
		rw.Header().Set("Weles-Previous-Page", welesPreviousPage)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*weles.JobInfo, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// JobListerPartialContentCode is the HTTP code returned for type JobListerPartialContent
const JobListerPartialContentCode int = 206

/*JobListerPartialContent Partial Content

swagger:response jobListerPartialContent
*/
type JobListerPartialContent struct {
	/*Weles-List-Batch-Size is the count of records returned on
	current page.

	*/
	WelesListBatchSize int32 `json:"Weles-List-Batch-Size"`
	/*Weles-List-Remaining is the number of records after current
	page.  Please note that this value may change when requesting
	for the same data at a different moments in time.

	*/
	WelesListRemaining uint64 `json:"Weles-List-Remaining"`
	/*Weles-List-Total is the count of records currently fulfilling
	requested JobFilter.  Please note that this value may change
	when requesting for the same data at a different moments in
	time.

	*/
	WelesListTotal uint64 `json:"Weles-List-Total"`
	/*Weles-Next-Page is the URL suffix to request next page of data.
	Please note that the same body must be used as in initial
	request.

	*/
	WelesNextPage string `json:"Weles-Next-Page"`
	/*Weles-Previous-Page is the URL suffix to request previous page
	of data.  Please note that the same body must be used as in
	initial request.

	*/
	WelesPreviousPage string `json:"Weles-Previous-Page"`

	/*
	  In: Body
	*/
	Payload []*weles.JobInfo `json:"body,omitempty"`
}

// NewJobListerPartialContent creates JobListerPartialContent with default headers values
func NewJobListerPartialContent() *JobListerPartialContent {

	return &JobListerPartialContent{}
}

// WithWelesListBatchSize adds the welesListBatchSize to the job lister partial content response
func (o *JobListerPartialContent) WithWelesListBatchSize(welesListBatchSize int32) *JobListerPartialContent {
	o.WelesListBatchSize = welesListBatchSize
	return o
}

// SetWelesListBatchSize sets the welesListBatchSize to the job lister partial content response
func (o *JobListerPartialContent) SetWelesListBatchSize(welesListBatchSize int32) {
	o.WelesListBatchSize = welesListBatchSize
}

// WithWelesListRemaining adds the welesListRemaining to the job lister partial content response
func (o *JobListerPartialContent) WithWelesListRemaining(welesListRemaining uint64) *JobListerPartialContent {
	o.WelesListRemaining = welesListRemaining
	return o
}

// SetWelesListRemaining sets the welesListRemaining to the job lister partial content response
func (o *JobListerPartialContent) SetWelesListRemaining(welesListRemaining uint64) {
	o.WelesListRemaining = welesListRemaining
}

// WithWelesListTotal adds the welesListTotal to the job lister partial content response
func (o *JobListerPartialContent) WithWelesListTotal(welesListTotal uint64) *JobListerPartialContent {
	o.WelesListTotal = welesListTotal
	return o
}

// SetWelesListTotal sets the welesListTotal to the job lister partial content response
func (o *JobListerPartialContent) SetWelesListTotal(welesListTotal uint64) {
	o.WelesListTotal = welesListTotal
}

// WithWelesNextPage adds the welesNextPage to the job lister partial content response
func (o *JobListerPartialContent) WithWelesNextPage(welesNextPage string) *JobListerPartialContent {
	o.WelesNextPage = welesNextPage
	return o
}

// SetWelesNextPage sets the welesNextPage to the job lister partial content response
func (o *JobListerPartialContent) SetWelesNextPage(welesNextPage string) {
	o.WelesNextPage = welesNextPage
}

// WithWelesPreviousPage adds the welesPreviousPage to the job lister partial content response
func (o *JobListerPartialContent) WithWelesPreviousPage(welesPreviousPage string) *JobListerPartialContent {
	o.WelesPreviousPage = welesPreviousPage
	return o
}

// SetWelesPreviousPage sets the welesPreviousPage to the job lister partial content response
func (o *JobListerPartialContent) SetWelesPreviousPage(welesPreviousPage string) {
	o.WelesPreviousPage = welesPreviousPage
}

// WithPayload adds the payload to the job lister partial content response
func (o *JobListerPartialContent) WithPayload(payload []*weles.JobInfo) *JobListerPartialContent {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the job lister partial content response
func (o *JobListerPartialContent) SetPayload(payload []*weles.JobInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JobListerPartialContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Weles-List-Batch-Size

	welesListBatchSize := swag.FormatInt32(o.WelesListBatchSize)
	if welesListBatchSize != "" {
		rw.Header().Set("Weles-List-Batch-Size", welesListBatchSize)
	}

	// response header Weles-List-Remaining

	welesListRemaining := swag.FormatUint64(o.WelesListRemaining)
	if welesListRemaining != "" {
		rw.Header().Set("Weles-List-Remaining", welesListRemaining)
	}

	// response header Weles-List-Total

	welesListTotal := swag.FormatUint64(o.WelesListTotal)
	if welesListTotal != "" {
		rw.Header().Set("Weles-List-Total", welesListTotal)
	}

	// response header Weles-Next-Page

	welesNextPage := o.WelesNextPage
	if welesNextPage != "" {
		rw.Header().Set("Weles-Next-Page", welesNextPage)
	}

	// response header Weles-Previous-Page

	welesPreviousPage := o.WelesPreviousPage
	if welesPreviousPage != "" {
		rw.Header().Set("Weles-Previous-Page", welesPreviousPage)
	}

	rw.WriteHeader(206)
	payload := o.Payload
	if payload == nil {
		payload = make([]*weles.JobInfo, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// JobListerBadRequestCode is the HTTP code returned for type JobListerBadRequest
const JobListerBadRequestCode int = 400

/*JobListerBadRequest Bad Request

swagger:response jobListerBadRequest
*/
type JobListerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *weles.ErrResponse `json:"body,omitempty"`
}

// NewJobListerBadRequest creates JobListerBadRequest with default headers values
func NewJobListerBadRequest() *JobListerBadRequest {

	return &JobListerBadRequest{}
}

// WithPayload adds the payload to the job lister bad request response
func (o *JobListerBadRequest) WithPayload(payload *weles.ErrResponse) *JobListerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the job lister bad request response
func (o *JobListerBadRequest) SetPayload(payload *weles.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JobListerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// JobListerNotFoundCode is the HTTP code returned for type JobListerNotFound
const JobListerNotFoundCode int = 404

/*JobListerNotFound Not Found

swagger:response jobListerNotFound
*/
type JobListerNotFound struct {

	/*
	  In: Body
	*/
	Payload *weles.ErrResponse `json:"body,omitempty"`
}

// NewJobListerNotFound creates JobListerNotFound with default headers values
func NewJobListerNotFound() *JobListerNotFound {

	return &JobListerNotFound{}
}

// WithPayload adds the payload to the job lister not found response
func (o *JobListerNotFound) WithPayload(payload *weles.ErrResponse) *JobListerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the job lister not found response
func (o *JobListerNotFound) SetPayload(payload *weles.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JobListerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// JobListerInternalServerErrorCode is the HTTP code returned for type JobListerInternalServerError
const JobListerInternalServerErrorCode int = 500

/*JobListerInternalServerError Internal Server error

swagger:response jobListerInternalServerError
*/
type JobListerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *weles.ErrResponse `json:"body,omitempty"`
}

// NewJobListerInternalServerError creates JobListerInternalServerError with default headers values
func NewJobListerInternalServerError() *JobListerInternalServerError {

	return &JobListerInternalServerError{}
}

// WithPayload adds the payload to the job lister internal server error response
func (o *JobListerInternalServerError) WithPayload(payload *weles.ErrResponse) *JobListerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the job lister internal server error response
func (o *JobListerInternalServerError) SetPayload(payload *weles.ErrResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *JobListerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
