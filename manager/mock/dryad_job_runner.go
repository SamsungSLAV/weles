// Code generated by MockGen. DO NOT EDIT.
// Source: git.tizen.org/tools/weles/manager (interfaces: DryadJobRunner)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDryadJobRunner is a mock of DryadJobRunner interface
type MockDryadJobRunner struct {
	ctrl     *gomock.Controller
	recorder *MockDryadJobRunnerMockRecorder
}

// MockDryadJobRunnerMockRecorder is the mock recorder for MockDryadJobRunner
type MockDryadJobRunnerMockRecorder struct {
	mock *MockDryadJobRunner
}

// NewMockDryadJobRunner creates a new mock instance
func NewMockDryadJobRunner(ctrl *gomock.Controller) *MockDryadJobRunner {
	mock := &MockDryadJobRunner{ctrl: ctrl}
	mock.recorder = &MockDryadJobRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDryadJobRunner) EXPECT() *MockDryadJobRunnerMockRecorder {
	return m.recorder
}

// Boot mocks base method
func (m *MockDryadJobRunner) Boot() error {
	ret := m.ctrl.Call(m, "Boot")
	ret0, _ := ret[0].(error)
	return ret0
}

// Boot indicates an expected call of Boot
func (mr *MockDryadJobRunnerMockRecorder) Boot() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Boot", reflect.TypeOf((*MockDryadJobRunner)(nil).Boot))
}

// Deploy mocks base method
func (m *MockDryadJobRunner) Deploy() error {
	ret := m.ctrl.Call(m, "Deploy")
	ret0, _ := ret[0].(error)
	return ret0
}

// Deploy indicates an expected call of Deploy
func (mr *MockDryadJobRunnerMockRecorder) Deploy() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deploy", reflect.TypeOf((*MockDryadJobRunner)(nil).Deploy))
}

// Test mocks base method
func (m *MockDryadJobRunner) Test() error {
	ret := m.ctrl.Call(m, "Test")
	ret0, _ := ret[0].(error)
	return ret0
}

// Test indicates an expected call of Test
func (mr *MockDryadJobRunnerMockRecorder) Test() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Test", reflect.TypeOf((*MockDryadJobRunner)(nil).Test))
}
