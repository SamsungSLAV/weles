swagger: '2.0'
info:
  description: |-
    This is an instance of Weles. [More about this instance of
    Weles.](http://weles.yourdomain.com).
  version: v1
  title: Weles
  termsOfService: 'http://weles.yourdomain.com/terms/'
  contact:
    email: admin@yourdomain.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:5010'
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: jobs
    description: Info and management of Weles Jobs.
  - name: artifacts
    description: Info about Artifacts used by Weles Jobs.
  - name: general
    description: Info about Weles (e.g. version)
schemes:
  - http
paths:
  /jobs:
    post:
      tags:
        - jobs
      summary: Add new Job
      description: |-
        Create Job based on Job Submission file (in YAML format). Returns 201
        response with JobID on correct request.

        Parsing the file and downloading Artifacts (if necessary) will be
        performed immediately.  Job will be executed when Worker will be
        available. JobLister path should be used to query Weles for Job
        progress.
      operationId: JobCreator
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: yamlfile
          type: file
          required: true
          description: is Job description yaml file.
      produces:
        - application/json
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/JobID'
        '415':
          $ref: '#/responses/UnsupportedMediaType'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/InternalServer'
  '/jobs/{JobID}/cancel':
    post:
      tags:
        - jobs
      summary: Cancel a Job
      description: |-
        Stop execution of Job identified by JobID. Returns 204 on success. If
        Job does not exist, 404 response will be returned. If the Job is
        already in final state, 403 response will be returned.
      operationId: JobCanceler
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          required: true
          name: JobID
          type: integer
          format: uint64
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/responses/NotFound'
        '403':
          $ref: '#/responses/Forbidden'
        '500':
          $ref: '#/responses/InternalServer'
  /jobs/list:
    post:
      tags:
        - jobs
      summary: List Jobs with filtering, sorting and pagination.
      description: |-
        Returns sorted list of Jobs. If there are more records than returned
        page, 206 response is returned. If the page is last - 200 response is
        returned. If no Jobs satisfy passed filter, 404 response is returned.
        Filling both before and after query will result in 400 error response.

        Providing empty body and no query parameter will result in list with
        default values - no filter, sorted in Ascending order by JobID.
        Check JobFilter and JobSorter models documentation to see how to use
        them.
        To ease automatic pagination, URL suffixes are returned with each
        2xx response.
      operationId: JobLister
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: jobFilterAndSort
          description: Job Filter and Sort object.
          required: false
          schema:
            description: Data for filtering and sorting Weles Jobs lists.
            type: object
            properties:
              Filter:
                $ref: '#/definitions/JobFilter'
              Sorter:
                $ref: '#/definitions/JobSorter'
        - in: query
          name: after
          description: |-
            Fill this parameter with JobID of the last element from current
            page to receive next one.
          type: integer
          format: uint64
        - in: query
          name: before
          description: |-
            Fill this parameter with JobID of the first element from current
            page to receive previous one.
          type: integer
          format: uint64
        - in: query
          name: limit
          description: |-
            Number of records to return. Overrides default server page limit.
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/JobInfo'
          headers:
            Previous:
              type: string
              format: URI
              description: |-
                URL suffix to request previous page of data. Please note that
                the same body must be used as in initial request.
            Next:
              type: string
              format: URI
              description: |-
                URL suffix to request next page of data. Please note that the
                same body must be used as in initial request.
            TotalRecords:
              type: integer
              format: uint64
              description: |-
                count of records currently fulfilling the requested JobFilter.
                Please note that this value may change when requesting for the
                same data at a different moments in time.
        '206':
          description: Partial Content
          schema:
            type: array
            items:
              $ref: '#/definitions/JobInfo'
          headers:
            Previous:
              type: string
              format: URI
              description: |-
                URL suffix to request previous page of data. Please note that
                the same body must be used as in initial request.
            Next:
              type: string
              format: URI
              description: |-
                URL suffix to request next page of data. Please note that the
                same body must be used as in initial request.
            TotalRecords:
              type: integer
              format: uint64
              description: |-
                 count of records currently fulfilling requested JobFilter.
                 Please note that this value may change when requesting for the
                 same data at a different moments in time.
            RemainingRecords:
              type: integer
              format: uint64
              description: |-
                number of records after current page. Please note that this
                value may change when requesting for the same data at a
                different moments in time.
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServer'
  /artifacts/list:
    post:
      tags:
        - artifacts
      summary: List Artifacts with filter and sort features
      description: |-
        Returns sorted list of Artifacts. If there are more records than
        default page size -  206 response is returned. If the page is last -
        200 response is returned. If no Artifact passes filter - 404 response
        is returned.

        Providing empty body and no query parameter will result in list with
        default values - no filter, sorted in Ascending order by ID.
        Check ArtifactFilter and ArtifactSorter models documentation to see how
        to use them.
        To ease automatic pagination, URL suffixes are returned with each
        2xx response.
      operationId: ArtifactLister
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: artifactFilterAndSort
          description: Artifact Filter and Sort object.
          required: false
          schema:
            description: Data for filtering and sorting Weles Jobs lists.
            type: object
            properties:
              Filter:
                $ref: '#/definitions/ArtifactFilter'
              Sorter:
                $ref: '#/definitions/ArtifactSorter'
        - in: query
          name: after
          description: |-
            Fill this parameter with Artifact's ID (don't mix it with JobID) of
            the last element from current page to receive next one.
          type: integer
          format: int64
        - in: query
          name: before
          description: |-
            Fill this parameter with Artifact's ID (don't mix it with JobID) of
            the first element from current page to receive previous one.
          type: integer
          format: int64
        - in: query
          name: limit
          description: |-
            Number of records to return. Overrides default server page limit.
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ArtifactInfo'
          headers:
            Previous:
              type: string
              format: URI
              description: |-
                URL suffix to request next page of data. Please note that the
                same body must be used as in initial request.
            Next:
              type: string
              format: URI
              description: |-
                URL suffix to request next page of data. Please note that the same
                body must be used as in initial request.
            TotalRecords:
              type: integer
              format: uint64
              description: |-
                count of records currently fulfilling the requested
                ArtifactFilter. Please note that this value may change when
                requesting for the same data at a different moment in time.
        '206':
          description: Partial Content
          schema:
            type: array
            items:
              $ref: '#/definitions/ArtifactInfo'
          headers:
            Previous:
              type: string
              format: URI
              description: |-
                URL to request next page of data. Please note that the same
                body must be used as in initial request.
            Next:
              type: string
              format: URI
              description: |-
                URL to request next page of data. Please note that the same
                body must be used as in initial request.
            TotalRecords:
              type: integer
              format: uint64
              description: |-
                count of records currently fulfilling the requested
                ArtifactFilter. Please note that this value may change when
                requesting for the same data at a different moment in time.
            RemainingRecords:
              type: integer
              format: uint64
              description: |-
                number of records after current page. Please note that this
                value may change when requesting for the same data at a
                different moment in time.
        '400':
          $ref: '#/responses/BadRequest'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServer'
  /version:
    get:
      tags:
        - general
      summary: Show current version of Weles internals
      description: |-
        Version and state of API (e.g. v1 obsolete, v2 stable, v3 devel) and
        server version.
      operationId: Version
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Version'
          headers:
            Weles-Server-Version:
              type: string
              description: Version of Weles server.
            Weles-API-Version:
              type: string
              description: Version of Weles API.
            Weles-API-State:
              type: string
              description: State of Weles API.
        '500':
          $ref: '#/responses/InternalServer'
responses:
  BadRequest:
    description: Bad Request
    schema:
      $ref: '#/definitions/ErrResponse'
  NotFound:
    description: Not Found
    schema:
      $ref: '#/definitions/ErrResponse'
  Forbidden:
    description: Forbidden
    schema:
      $ref: '#/definitions/ErrResponse'
  UnsupportedMediaType:
    description: Unsupported media type
    schema:
      $ref: '#/definitions/ErrResponse'
  UnprocessableEntity:
    description: Unprocessable entity
    schema:
      $ref: '#/definitions/ErrResponse'
  InternalServer:
    description: Internal Server error
    schema:
      $ref: '#/definitions/ErrResponse'
definitions:
  JobID:
    description: is a unique identifier of a Weles Job.
    type: integer
    format: uint64
  JobStatus:
    description: |
      specifies state of the Job.

      * NEW             - New Job has been created.

      * PARSING         - Provided yaml file is being parsed and interpreted.

      * DOWNLOADING     - Images and/or files required for the test are being
                          downloaded.

      * WAITING         - Job is waiting for Boruta worker.

      * RUNNING         - Job is being executed.

      * COMPLETED       - Job is completed. This is terminal state.

      * FAILED          - Job execution has failed. This is terminal state.

      * CANCELED        - Job has been canceled with API call. This is terminal
                          state.

    type: string
    enum:
      - NEW
      - PARSING
      - DOWNLOADING
      - WAITING
      - RUNNING
      - COMPLETED
      - FAILED
      - CANCELED
    x-go-type:
      import:
        package: "github.com/SamsungSLAV/weles/enums"
        alias: "enums"
      type: "JobStatus"
  JobInfo:
    description: contains information about a Job available for public API.
    type: object
    properties:
      jobID:
        $ref: '#/definitions/JobID'
        description: is a unique Job identifier
        x-omitempty: false
      name:
        type: string
        description: |-
          is the Job name acquired from yaml file during Job creation.
        x-omitempty: true
      created:
        type: string
        format: date-time
        description: is the Job creation time (UTC).
        x-omitempty: false
      updated:
        type: string
        format: date-time
        description: is the time of latest Jobs' status modification (UTC).
        x-omitempty: false
      status:
        $ref: '#/definitions/JobStatus'
        description: specifies current state of the Job.
        x-omitempty: false
      info:
        type: string
        description: |-
          provides additional information about current state, e.g. cause of
          failure
        x-omitempty: false
  JobFilter:
    description: |-
      is used to filter Weles Jobs. Filling more than one struct member (e.g.
      JobID, Name) will result in searching for a Job with filled JobID and
      Name. Filling more than one member of an array/slice (in specific struct
      member) will result in searching for all members of array. Both
      aforementioned behaviours may occur simultainously. Some JobFilter fields
      support regular expressions (see fields documentation).
    type: object
    properties:
      JobID:
        type: array
        items:
          $ref: '#/definitions/JobID'
      Name:
        description: |-
          Filter by name acquired Job Submission file (yaml format, job_name
          key's value). Allows usage of regular expressions.
        type: array
        items:
          type: string
      CreatedAfter:
        description: Time after which the Job was created.
        type: string
        format: date-time
      CreatedBefore:
        description: Time before which the Job was created.
        type: string
        format: date-time
      UpdatedAfter:
        description: Time after which the Job was updated.
        type: string
        format: date-time
      UpdatedBefore:
        description: Time before which the Job was updated.
        type: string
        format: date-time
      Status:
        description: |-
          Filter by status. Providing multiple elements will result in all
          statuses returned. Omiting this parameter or filling it with empty
          value will result in all list of Jobs with all statuses.
        type: array
        items:
          $ref: '#/definitions/JobStatus'
      Info:
        description: |-
          Filter by Job info. Allows usage of regular expressions.
        type: array
        items:
          type: string
  JobSortBy:
    description: |
      denotes key for sorting Jobs list.

      * ID - default sort key.

      * CreatedDate - sorting by date of creation of the weles Job.

      * UpdatedDate - sorting by date of update of the weles Job.

      * JobStatus - sorting by the Job Status. Descending order will sort in
      the order JobStatuses are listed in the docs (from NEW at the start to
      CANCELED at the end). Ascending will reverse this order.

      When sorting is applied, and there are many Jobs with the same
      date/status, they will be sorted by JobID (Ascending)
    type: string
    enum:
      - ID
      - CreatedDate
      - UpdatedDate
      - JobStatus
    x-go-type:
      import:
        package: "github.com/SamsungSLAV/weles/enums"
        alias: "enums"
      type: "JobSortBy"
  SortOrder:
    description: |
      denotes direction of sorting of weles Jobs or Artifacts.

      * Ascending - from oldest to newest.

      * Descending - from newest to oldest.

    type: string
    enum:
      - Ascending
      - Descending
    x-go-type:
      import:
        package: "github.com/SamsungSLAV/weles/enums"
        alias: "enums"
      type: "SortOrder"
  JobSorter:
    description: |-
      defines the key for sorting as well as direction of sorting.
    type: object
    properties:
      By:
        $ref: '#/definitions/JobSortBy'
        description: |-
          Key by which Jobs will be sorted. See JobSortBy documentation.
      Order:
        $ref: '#/definitions/SortOrder'
        description: |-
          Order in which Jobs will be sorted. See SortOrder documentation.
  ArtifactType:
    description: |
      denotes type and function of an Artifact. Depends on Job Submission file.

      * IMAGE - image file.

      * RESULT - all outputs, files built during tests, etc.

      * TEST - additional files uploaded by user for conducting test.

      * YAML - yaml file describing Weles Job.

    type: string
    enum:
      - IMAGE
      - RESULT
      - TEST
      - YAML
    x-go-type:
      import:
        package: "github.com/SamsungSLAV/weles/enums"
        alias: "enums"
      type: "ArtifactType"
  ArtifactPath:
    description: describes path to Artifact in ArtifactDB filesystem.
    type: string
  ArtifactStatus:
    description: |
      describes Artifact status and availability.

      * DOWNLOADING - artifact is currently being downloaded.

      * READY - artifact has been downloaded and is ready to use.

      * FAILED - file is not available for use (e.g. download failed).

      * PENDING - artifact download has not started yet.

    type: string
    enum:
      - DOWNLOADING
      - READY
      - FAILED
      - PENDING
    x-go-type:
      import:
        package: "github.com/SamsungSLAV/weles/enums"
        alias: "enums"
      type: "ArtifactStatus"
  ArtifactURI:
    description: is used to identify Artifact's source.
    type: string
    format: uri
  ArtifactAlias:
    description: |-
      alternative name of an Artifact. Taken from the Job Submission file.
    type: string
  ArtifactDescription:
    description: |-
      contains minimal information needed to create new Artifact in ArtifactDB.
    type: object
    properties:
      JobID:
        $ref: '#/definitions/JobID'
        description: specifies Job for which Artifact was created.
        x-omitempty: false
      Type:
        $ref: '#/definitions/ArtifactType'
        description: see documentation of ArtifactType.
        x-omitempty: false
      Alias:
        $ref: '#/definitions/ArtifactAlias'
        description: |-
          alternative name of an Artifact. Taken from the Job Submission file.
        x-omitempty: true
      URI:
        $ref: '#/definitions/ArtifactURI'
        description: |-
          URI from which artifact was downloaded. Taken from the Job Submission
          file.
        x-omitempty: true
  ArtifactInfo:
    description: describes single Artifact stored in ArtifactDB.
    type: object
    allOf:
     - $ref: '#/definitions/ArtifactDescription'
    properties:
      Path:
        $ref: '#/definitions/ArtifactPath'
        description: |-
          Internal Path where Artifact is stored on Weles server.
        x-omitempty: true
      Status:
        $ref: '#/definitions/ArtifactStatus'
        description: see documentation of ArtifactStatus.
      Timestamp:
        description: is date of creating the Artifact.
        type: string
        format: date-time
        x-omitempty: false
      ID:
        description: unique identifier of an Artifact.
        type: integer
        format: int64
        x-omitempty: false
        x-go-custom-tag: "db:\",primarykey, autoincrement\""
  ArtifactFilter:
    description: |-
      is used to filter Weles Artifacts. Filling more than one struct member
      (e.g. JobID and Type) will result in searching for an Artifact(s) created
      during execution of Job with JobID of specified Type. Filling more than
      one member of an array/slice (in specific struct member - i.e. providing
      2 JobID) will result in searching for all members of that array. Both
      aforementioned behaviours may occur simultainously.
    type: object
    properties:
      JobID:
        description: Filter by JobID, most commonly used filter.
        type: array
        items:
          $ref: '#/definitions/JobID'
      Type:
        description: |-
            Refer to ArtifactType documentation for possible values. Useful for
            requesting only RESULT artifacts from a Job.
        type: array
        items:
          $ref: '#/definitions/ArtifactType'
      Status:
        description:
            Refer to ArtifactStatus documentation for possible values.
        type: array
        items:
          $ref: '#/definitions/ArtifactStatus'
      Alias:
        description:
          Filter by ArtifactAlias (taken from Job Submission file).
        type: array
        items:
          $ref: '#/definitions/ArtifactAlias'
  ArtifactSortBy:
    description: |
      denotes the key for sorting list of all artifacts.

      * ID - sorting by artifact ID.

    type: string
    enum:
      - ID
    x-go-type:
      import:
        package: "github.com/SamsungSLAV/weles/enums"
        alias: "enums"
      type: "ArtifactSortBy"
  ArtifactSorter:
    description: |-
      defines the key for sorting as well as direction of sorting.
      When ArtifactSorter is empty, Artifacts are sorted by ID, Ascending.
    type: object
    properties:
      By:
        description: |-
          Key by which Artifacts will be sorted. See ArtifactSortBy
          documentation.
        $ref: '#/definitions/ArtifactSortBy'
      Order:
        description: |-
          Order in which Artifacts will be sorted. See SortOrder documentation.
        $ref: '#/definitions/SortOrder'
  Version:
    description: |-
      defines version of Weles API (and its state) and server.
    type: object
    properties:
      Server:
        description: Version of Weles server.
        type: string
      API:
        description: Version of Weles API.
        type: string
      State:
        description: State of Weles API.
        type: string
        enum:
          - devel
          - stable
          - deprecated
  ErrResponse:
    description: >-
      is a standard error response containing information about the
      error. It consists of error type and message.
    type: object
    properties:
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Official Weles documentation.
  url: 'http://weles.rtfd.io'
